import "./globals.css";
import type { Metadata } from "next";
import { Outfit, Noto_Sans_KR } from "next/font/google";
import localFont from 'next/font/local'
import GoogleAnalytics from "@/components/GoogleAnalytics";

const notoSansKr = Noto_Sans_KR({
  weight: ["400", "700", "900"],
  subsets: ["latin"],
  variable: "--font-noto-sans-kr"
});

const outfit = Outfit({
  weight: ["400", "700", "900"],
  subsets: ["latin"],
  variable: "--font-outfit",

});

const spoqaHanSansNeo = localFont(
  {
    src: [{
      path: "../fonts/SpoqaHanSansNeo-Bold.woff2",
      weight: '700',
      style: 'normal',
    },
    {
      path: "../fonts/SpoqaHanSansNeo-Light.woff2",
      weight: '300',
      style: 'normal'
    },
    {
      path: "../fonts/SpoqaHanSansNeo-Medium.woff2",
      weight: '500',
      style: 'normal'
    },
    {
      path: "../fonts/SpoqaHanSansNeo-Regular.woff2",
      weight: '400',
      style: 'normal'
    },
    {
      path: "../fonts/SpoqaHanSansNeo-Thin.woff2",
      weight: '100',
      style: 'normal'
    }],
    variable: '--font-spoqa-han-sans-neo',
  }
)
const cascadiaCode = localFont(
  {
    src: [{
      path: "../fonts/CascadiaCode.woff2",
      weight: '400',
      style: 'normal',
    },
    {
      path: "../fonts/CascadiaCodeItalic.woff2",
      weight: '400',
      style: 'italic'
    }],
    variable: '--font-cascadia-code',
  }
)

const cascadiaMono = localFont(
  {
    src: [{
      path: "../fonts/CascadiaMono.woff2",
      weight: '400',
      style: 'normal',
    },
    {
      path: "../fonts/CascadiaMonoItalic.woff2",
      weight: '400',
      style: 'italic'
    }],
    variable: '--font-cascadia-mono',
  }
)

export const metadata: Metadata = {
  title: process.env.APP_NAME,
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  console.log(outfit.style)
  console.log(notoSansKr.style)
  console.log({ fontFamily: `${outfit.style.fontFamily.split(",")[0]}, ${notoSansKr.style.fontFamily}`, fontStyle: 'normal' })
  return (
    <html
      lang={process.env.NEXT_PUBLIC_LANG || "en"}
      className={`${spoqaHanSansNeo.variable} ${outfit.variable} ${cascadiaMono.variable} ${cascadiaCode.variable} font-spoqa-han-sans-neo`}
    // style={{ fontFamily: `${outfit.style.fontFamily.split(",")[0]}, ${notoSansKr.style.fontFamily}`, fontStyle: 'normal' }}
    >
      <link
        rel="icon"
        href="/icon?<generated>"
        type="image/png"
        sizes="32x32"
      />
      <GoogleAnalytics
        GA_MEASUREMENT_ID={process.env.NEXT_PUBLIC_GA_ID as string}
      />
      <body>{children}</body>
    </html>
  );
}
